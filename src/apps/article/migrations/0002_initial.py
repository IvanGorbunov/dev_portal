# Generated by Django 4.2.8 on 2024-01-21 01:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('article', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='articleview',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_views', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='articlescore',
            name='article',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score', to='article.article', verbose_name='Article'),
        ),
        migrations.AddField(
            model_name='articlescore',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='article_scores', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='articles', to=settings.AUTH_USER_MODEL, verbose_name='Author'),
        ),
        migrations.CreateModel(
            name='ArticleDurationScore',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('article.articlescore',),
        ),
        migrations.CreateModel(
            name='ArticlePointScore',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('article.articlescore',),
        ),
        migrations.AlterUniqueTogether(
            name='articleview',
            unique_together={('user', 'article')},
        ),
        migrations.AddConstraint(
            model_name='articlescore',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('type', 'points'), ('value_duration__isnull', True), ('value_points__isnull', False)), models.Q(('type', 'duration'), ('value_duration__isnull', False), ('value_points__isnull', True)), _connector='OR'), name='article_articlescore_valuematches_type'),
        ),
    ]
